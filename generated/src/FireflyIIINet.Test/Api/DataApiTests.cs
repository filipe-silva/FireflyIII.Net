/*
 * Firefly III API v2.0.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-03-05T14:16:31+00:00 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing DataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DataApiTests : IDisposable
    {
        private DataApi instance;

        public DataApiTests()
        {
            instance = new DataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DataApi
            //Assert.IsType<DataApi>(instance);
        }

        /// <summary>
        /// Test BulkUpdateTransactions
        /// </summary>
        [Fact]
        public void BulkUpdateTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //instance.BulkUpdateTransactions(query);
        }

        /// <summary>
        /// Test DestroyData
        /// </summary>
        [Fact]
        public void DestroyDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DataDestroyObject objects = null;
            //Guid? xTraceId = null;
            //instance.DestroyData(objects, xTraceId);
        }

        /// <summary>
        /// Test ExportAccounts
        /// </summary>
        [Fact]
        public void ExportAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportAccounts(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportBills
        /// </summary>
        [Fact]
        public void ExportBillsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportBills(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportBudgets
        /// </summary>
        [Fact]
        public void ExportBudgetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportBudgets(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportCategories
        /// </summary>
        [Fact]
        public void ExportCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportCategories(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportPiggies
        /// </summary>
        [Fact]
        public void ExportPiggiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportPiggies(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportRecurring
        /// </summary>
        [Fact]
        public void ExportRecurringTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportRecurring(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportRules
        /// </summary>
        [Fact]
        public void ExportRulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportRules(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportTags
        /// </summary>
        [Fact]
        public void ExportTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportTags(xTraceId, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test ExportTransactions
        /// </summary>
        [Fact]
        public void ExportTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //string? accounts = null;
            //ExportFileFilter? type = null;
            //var response = instance.ExportTransactions(start, end, xTraceId, accounts, type);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test PurgeData
        /// </summary>
        [Fact]
        public void PurgeDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //instance.PurgeData(xTraceId);
        }
    }
}
