/*
 * Firefly III API v1.5.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-04-01T18:51:42+00:00 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectGroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectGroupsApiTests : IDisposable
    {
        private ObjectGroupsApi instance;

        public ObjectGroupsApiTests()
        {
            instance = new ObjectGroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectGroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectGroupsApi
            //Assert.IsType<ObjectGroupsApi>(instance);
        }

        /// <summary>
        /// Test DeleteObjectGroup
        /// </summary>
        [Fact]
        public void DeleteObjectGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //instance.DeleteObjectGroup(id);
        }

        /// <summary>
        /// Test GetObjectGroup
        /// </summary>
        [Fact]
        public void GetObjectGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.GetObjectGroup(id);
            //Assert.IsType<ObjectGroupSingle>(response);
        }

        /// <summary>
        /// Test ListBillByObjectGroup
        /// </summary>
        [Fact]
        public void ListBillByObjectGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //int? page = null;
            //var response = instance.ListBillByObjectGroup(id, page);
            //Assert.IsType<BillArray>(response);
        }

        /// <summary>
        /// Test ListObjectGroups
        /// </summary>
        [Fact]
        public void ListObjectGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.ListObjectGroups(page);
            //Assert.IsType<ObjectGroupArray>(response);
        }

        /// <summary>
        /// Test ListPiggyBankByObjectGroup
        /// </summary>
        [Fact]
        public void ListPiggyBankByObjectGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //int? page = null;
            //var response = instance.ListPiggyBankByObjectGroup(id, page);
            //Assert.IsType<PiggyBankArray>(response);
        }

        /// <summary>
        /// Test UpdateObjectGroup
        /// </summary>
        [Fact]
        public void UpdateObjectGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ObjectGroupUpdate objectGroupUpdate = null;
            //var response = instance.UpdateObjectGroup(id, objectGroupUpdate);
            //Assert.IsType<ObjectGroupSingle>(response);
        }
    }
}
