/*
 * Firefly III API v2.0.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-03-05T14:16:31+00:00 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing InsightApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InsightApiTests : IDisposable
    {
        private InsightApi instance;

        public InsightApiTests()
        {
            instance = new InsightApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InsightApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InsightApi
            //Assert.IsType<InsightApi>(instance);
        }

        /// <summary>
        /// Test InsightExpenseAsset
        /// </summary>
        [Fact]
        public void InsightExpenseAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseAsset(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseBill
        /// </summary>
        [Fact]
        public void InsightExpenseBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? bills = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseBill(start, end, xTraceId, bills, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseBudget
        /// </summary>
        [Fact]
        public void InsightExpenseBudgetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? budgets = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseBudget(start, end, xTraceId, budgets, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseCategory
        /// </summary>
        [Fact]
        public void InsightExpenseCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? categories = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseCategory(start, end, xTraceId, categories, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseExpense
        /// </summary>
        [Fact]
        public void InsightExpenseExpenseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseExpense(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseNoBill
        /// </summary>
        [Fact]
        public void InsightExpenseNoBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseNoBill(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseNoBudget
        /// </summary>
        [Fact]
        public void InsightExpenseNoBudgetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseNoBudget(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseNoCategory
        /// </summary>
        [Fact]
        public void InsightExpenseNoCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseNoCategory(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseNoTag
        /// </summary>
        [Fact]
        public void InsightExpenseNoTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseNoTag(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseTag
        /// </summary>
        [Fact]
        public void InsightExpenseTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? tags = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseTag(start, end, xTraceId, tags, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightExpenseTotal
        /// </summary>
        [Fact]
        public void InsightExpenseTotalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightExpenseTotal(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeAsset
        /// </summary>
        [Fact]
        public void InsightIncomeAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeAsset(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeCategory
        /// </summary>
        [Fact]
        public void InsightIncomeCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? categories = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeCategory(start, end, xTraceId, categories, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeNoCategory
        /// </summary>
        [Fact]
        public void InsightIncomeNoCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeNoCategory(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeNoTag
        /// </summary>
        [Fact]
        public void InsightIncomeNoTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeNoTag(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeRevenue
        /// </summary>
        [Fact]
        public void InsightIncomeRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeRevenue(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeTag
        /// </summary>
        [Fact]
        public void InsightIncomeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? tags = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeTag(start, end, xTraceId, tags, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightIncomeTotal
        /// </summary>
        [Fact]
        public void InsightIncomeTotalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightIncomeTotal(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransferCategory
        /// </summary>
        [Fact]
        public void InsightTransferCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? categories = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransferCategory(start, end, xTraceId, categories, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransferNoCategory
        /// </summary>
        [Fact]
        public void InsightTransferNoCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransferNoCategory(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransferNoTag
        /// </summary>
        [Fact]
        public void InsightTransferNoTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransferNoTag(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransferTag
        /// </summary>
        [Fact]
        public void InsightTransferTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? tags = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransferTag(start, end, xTraceId, tags, accounts);
            //Assert.IsType<List<InsightGroupEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransferTotal
        /// </summary>
        [Fact]
        public void InsightTransferTotalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransferTotal(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTotalEntry>>(response);
        }

        /// <summary>
        /// Test InsightTransfers
        /// </summary>
        [Fact]
        public void InsightTransfersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //Guid? xTraceId = null;
            //List<long>? accounts = null;
            //var response = instance.InsightTransfers(start, end, xTraceId, accounts);
            //Assert.IsType<List<InsightTransferEntry>>(response);
        }
    }
}
