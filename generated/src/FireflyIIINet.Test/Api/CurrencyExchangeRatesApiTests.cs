/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: thegrumpydictator@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing CurrencyExchangeRatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CurrencyExchangeRatesApiTests : IDisposable
    {
        private CurrencyExchangeRatesApi instance;

        public CurrencyExchangeRatesApiTests()
        {
            instance = new CurrencyExchangeRatesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CurrencyExchangeRatesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CurrencyExchangeRatesApi
            //Assert.IsType<CurrencyExchangeRatesApi>(instance);
        }

        /// <summary>
        /// Test GetExchangeRate
        /// </summary>
        [Fact]
        public void GetExchangeRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string from = null;
            //string to = null;
            //DateTime? date = null;
            //double? amount = null;
            //var response = instance.GetExchangeRate(from, to, date, amount);
            //Assert.IsType<ExchangeRate>(response);
        }
    }
}
