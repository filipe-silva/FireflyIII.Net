/*
 * Firefly III API v2.0.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-03-05T14:16:31+00:00 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing AttachmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AttachmentsApiTests : IDisposable
    {
        private AttachmentsApi instance;

        public AttachmentsApiTests()
        {
            instance = new AttachmentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AttachmentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AttachmentsApi
            //Assert.IsType<AttachmentsApi>(instance);
        }

        /// <summary>
        /// Test DeleteAttachment
        /// </summary>
        [Fact]
        public void DeleteAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //instance.DeleteAttachment(id, xTraceId);
        }

        /// <summary>
        /// Test DownloadAttachment
        /// </summary>
        [Fact]
        public void DownloadAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //var response = instance.DownloadAttachment(id, xTraceId);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [Fact]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //var response = instance.GetAttachment(id, xTraceId);
            //Assert.IsType<AttachmentSingle>(response);
        }

        /// <summary>
        /// Test ListAttachment
        /// </summary>
        [Fact]
        public void ListAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //int? page = null;
            //var response = instance.ListAttachment(xTraceId, page);
            //Assert.IsType<AttachmentArray>(response);
        }

        /// <summary>
        /// Test StoreAttachment
        /// </summary>
        [Fact]
        public void StoreAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AttachmentStore attachmentStore = null;
            //Guid? xTraceId = null;
            //var response = instance.StoreAttachment(attachmentStore, xTraceId);
            //Assert.IsType<AttachmentSingle>(response);
        }

        /// <summary>
        /// Test UpdateAttachment
        /// </summary>
        [Fact]
        public void UpdateAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //AttachmentUpdate attachmentUpdate = null;
            //Guid? xTraceId = null;
            //var response = instance.UpdateAttachment(id, attachmentUpdate, xTraceId);
            //Assert.IsType<AttachmentSingle>(response);
        }

        /// <summary>
        /// Test UploadAttachment
        /// </summary>
        [Fact]
        public void UploadAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //System.IO.Stream? body = null;
            //instance.UploadAttachment(id, xTraceId, body);
        }
    }
}
