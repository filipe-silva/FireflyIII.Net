/*
 * Firefly III API v2.0.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-03-05T14:16:31+00:00 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing BillsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BillsApiTests : IDisposable
    {
        private BillsApi instance;

        public BillsApiTests()
        {
            instance = new BillsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BillsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BillsApi
            //Assert.IsType<BillsApi>(instance);
        }

        /// <summary>
        /// Test DeleteBill
        /// </summary>
        [Fact]
        public void DeleteBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //instance.DeleteBill(id, xTraceId);
        }

        /// <summary>
        /// Test GetBill
        /// </summary>
        [Fact]
        public void GetBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //var response = instance.GetBill(id, xTraceId, start, end);
            //Assert.IsType<BillSingle>(response);
        }

        /// <summary>
        /// Test ListAttachmentByBill
        /// </summary>
        [Fact]
        public void ListAttachmentByBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //int? page = null;
            //var response = instance.ListAttachmentByBill(id, xTraceId, page);
            //Assert.IsType<AttachmentArray>(response);
        }

        /// <summary>
        /// Test ListBill
        /// </summary>
        [Fact]
        public void ListBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? xTraceId = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //var response = instance.ListBill(xTraceId, page, start, end);
            //Assert.IsType<BillArray>(response);
        }

        /// <summary>
        /// Test ListRuleByBill
        /// </summary>
        [Fact]
        public void ListRuleByBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //var response = instance.ListRuleByBill(id, xTraceId);
            //Assert.IsType<RuleArray>(response);
        }

        /// <summary>
        /// Test ListTransactionByBill
        /// </summary>
        [Fact]
        public void ListTransactionByBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? xTraceId = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //TransactionTypeFilter? type = null;
            //var response = instance.ListTransactionByBill(id, xTraceId, start, end, type);
            //Assert.IsType<TransactionArray>(response);
        }

        /// <summary>
        /// Test StoreBill
        /// </summary>
        [Fact]
        public void StoreBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BillStore billStore = null;
            //Guid? xTraceId = null;
            //var response = instance.StoreBill(billStore, xTraceId);
            //Assert.IsType<BillSingle>(response);
        }

        /// <summary>
        /// Test UpdateBill
        /// </summary>
        [Fact]
        public void UpdateBillTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //BillUpdate billUpdate = null;
            //Guid? xTraceId = null;
            //var response = instance.UpdateBill(id, billUpdate, xTraceId);
            //Assert.IsType<BillSingle>(response);
        }
    }
}
