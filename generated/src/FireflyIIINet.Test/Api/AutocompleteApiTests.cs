/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing AutocompleteApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AutocompleteApiTests : IDisposable
    {
        private AutocompleteApi instance;

        public AutocompleteApiTests()
        {
            instance = new AutocompleteApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AutocompleteApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AutocompleteApi
            //Assert.IsType<AutocompleteApi>(instance);
        }

        /// <summary>
        /// Test GetAccountsAC
        /// </summary>
        [Fact]
        public void GetAccountsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //string date = null;
            //AccountTypeFilter type = null;
            //var response = instance.GetAccountsAC(query, limit, date, type);
            //Assert.IsType<List<AutocompleteAccount>>(response);
        }

        /// <summary>
        /// Test GetBillsAC
        /// </summary>
        [Fact]
        public void GetBillsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetBillsAC(query, limit);
            //Assert.IsType<List<AutocompleteBill>>(response);
        }

        /// <summary>
        /// Test GetBudgetsAC
        /// </summary>
        [Fact]
        public void GetBudgetsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetBudgetsAC(query, limit);
            //Assert.IsType<List<AutocompleteBudget>>(response);
        }

        /// <summary>
        /// Test GetCategoriesAC
        /// </summary>
        [Fact]
        public void GetCategoriesACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetCategoriesAC(query, limit);
            //Assert.IsType<List<AutocompleteCategory>>(response);
        }

        /// <summary>
        /// Test GetCurrenciesAC
        /// </summary>
        [Fact]
        public void GetCurrenciesACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetCurrenciesAC(query, limit);
            //Assert.IsType<List<AutocompleteCurrency>>(response);
        }

        /// <summary>
        /// Test GetCurrenciesCodeAC
        /// </summary>
        [Fact]
        public void GetCurrenciesCodeACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetCurrenciesCodeAC(query, limit);
            //Assert.IsType<List<AutocompleteCurrencyCode>>(response);
        }

        /// <summary>
        /// Test GetObjectGroupsAC
        /// </summary>
        [Fact]
        public void GetObjectGroupsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetObjectGroupsAC(query, limit);
            //Assert.IsType<List<AutocompleteObjectGroup>>(response);
        }

        /// <summary>
        /// Test GetPiggiesAC
        /// </summary>
        [Fact]
        public void GetPiggiesACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetPiggiesAC(query, limit);
            //Assert.IsType<List<AutocompletePiggy>>(response);
        }

        /// <summary>
        /// Test GetPiggiesBalanceAC
        /// </summary>
        [Fact]
        public void GetPiggiesBalanceACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetPiggiesBalanceAC(query, limit);
            //Assert.IsType<List<AutocompletePiggyBalance>>(response);
        }

        /// <summary>
        /// Test GetRuleGroupsAC
        /// </summary>
        [Fact]
        public void GetRuleGroupsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetRuleGroupsAC(query, limit);
            //Assert.IsType<List<AutocompleteRuleGroup>>(response);
        }

        /// <summary>
        /// Test GetRulesAC
        /// </summary>
        [Fact]
        public void GetRulesACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetRulesAC(query, limit);
            //Assert.IsType<List<AutocompleteRule>>(response);
        }

        /// <summary>
        /// Test GetTagAC
        /// </summary>
        [Fact]
        public void GetTagACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetTagAC(query, limit);
            //Assert.IsType<List<AutocompleteTag>>(response);
        }

        /// <summary>
        /// Test GetTransactionTypesAC
        /// </summary>
        [Fact]
        public void GetTransactionTypesACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetTransactionTypesAC(query, limit);
            //Assert.IsType<List<AutocompleteTransactionType>>(response);
        }

        /// <summary>
        /// Test GetTransactionsAC
        /// </summary>
        [Fact]
        public void GetTransactionsACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetTransactionsAC(query, limit);
            //Assert.IsType<List<AutocompleteTransaction>>(response);
        }

        /// <summary>
        /// Test GetTransactionsIDAC
        /// </summary>
        [Fact]
        public void GetTransactionsIDACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? limit = null;
            //var response = instance.GetTransactionsIDAC(query, limit);
            //Assert.IsType<List<AutocompleteTransactionID>>(response);
        }
    }
}
