/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: thegrumpydictator@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIIINet.Client;
using FireflyIIINet.Api;
// uncomment below to import models
//using FireflyIIINet.Model;

namespace FireflyIIINet.Test.Api
{
    /// <summary>
    ///  Class for testing PiggyBanksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PiggyBanksApiTests : IDisposable
    {
        private PiggyBanksApi instance;

        public PiggyBanksApiTests()
        {
            instance = new PiggyBanksApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PiggyBanksApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PiggyBanksApi
            //Assert.IsType<PiggyBanksApi>(instance);
        }

        /// <summary>
        /// Test DeletePiggyBank
        /// </summary>
        [Fact]
        public void DeletePiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //instance.DeletePiggyBank(id);
        }

        /// <summary>
        /// Test GetPiggyBank
        /// </summary>
        [Fact]
        public void GetPiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.GetPiggyBank(id);
            //Assert.IsType<PiggyBankSingle>(response);
        }

        /// <summary>
        /// Test ListEventByPiggyBank
        /// </summary>
        [Fact]
        public void ListEventByPiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //int? page = null;
            //var response = instance.ListEventByPiggyBank(id, page);
            //Assert.IsType<PiggyBankEventArray>(response);
        }

        /// <summary>
        /// Test ListPiggyBank
        /// </summary>
        [Fact]
        public void ListPiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.ListPiggyBank(page);
            //Assert.IsType<PiggyBankArray>(response);
        }

        /// <summary>
        /// Test StorePiggyBank
        /// </summary>
        [Fact]
        public void StorePiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PiggyBank piggyBank = null;
            //var response = instance.StorePiggyBank(piggyBank);
            //Assert.IsType<PiggyBankSingle>(response);
        }

        /// <summary>
        /// Test UpdatePiggyBank
        /// </summary>
        [Fact]
        public void UpdatePiggyBankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //PiggyBank piggyBank = null;
            //var response = instance.UpdatePiggyBank(id, piggyBank);
            //Assert.IsType<PiggyBankSingle>(response);
        }
    }
}
