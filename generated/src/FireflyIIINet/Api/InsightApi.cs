/*
 * Firefly III API v2.0.0
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-03-05T14:16:31+00:00 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using System.Threading;
using System.Threading.Tasks;
using FireflyIIINet.Client;
using FireflyIIINet.Client.Auth;
using FireflyIIINet.Model;
using ConfigurationClient = FireflyIIINet.Client.Configuration;

namespace FireflyIIINet.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IInsightApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Insight into expenses, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseAssetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, grouped by bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseBillWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, grouped by budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseBudgetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, grouped by expense account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseExpense(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by expense account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseExpenseWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, without bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightExpenseNoBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, without bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightExpenseNoBillWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, without budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightExpenseNoBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, without budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightExpenseNoBudgetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightExpenseNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightExpenseNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightExpenseNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightExpenseNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightExpenseTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightExpenseTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into total expenses.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total expenses made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightExpenseTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into total expenses.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total expenses made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightExpenseTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightIncomeAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightIncomeAssetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightIncomeCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightIncomeCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightIncomeNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightIncomeNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightIncomeNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightIncomeNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, grouped by revenue account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightIncomeRevenue(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, grouped by revenue account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightIncomeRevenueWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into income, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightIncomeTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into income, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightIncomeTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into total income.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total income received by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightIncomeTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into total income.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total income received by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightIncomeTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into transfers, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightTransferCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into transfers, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightTransferCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into transfers, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightTransferNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into transfers, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightTransferNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightTransferNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightTransferNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into transfers, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        List<InsightGroupEntry> InsightTransferTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into transfers, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        ApiResponse<List<InsightGroupEntry>> InsightTransferTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into total transfers.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total amount transfers made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        List<InsightTotalEntry> InsightTransferTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into total transfers.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total amount transfers made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        ApiResponse<List<InsightTotalEntry>> InsightTransferTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        /// <summary>
        /// Insight into transfers, grouped by account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTransferEntry&gt;</returns>
        List<InsightTransferEntry> InsightTransfers(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);

        /// <summary>
        /// Insight into transfers, grouped by account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTransferEntry&gt;</returns>
        ApiResponse<List<InsightTransferEntry>> InsightTransfersWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IInsightApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Insight into expenses, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseAssetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseAssetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, grouped by bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseBillAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseBillWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, grouped by budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseBudgetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseBudgetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, grouped by expense account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseExpenseAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by expense account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseExpenseWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, without bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightExpenseNoBillAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, without bill.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoBillWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, without budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightExpenseNoBudgetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, without budget.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoBudgetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightExpenseNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightExpenseNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightExpenseTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into total expenses.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total expenses made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightExpenseTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into total expenses.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total expenses made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightIncomeAssetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, grouped by asset account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeAssetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightIncomeCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightIncomeNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightIncomeNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, grouped by revenue account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightIncomeRevenueAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, grouped by revenue account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeRevenueWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into income, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightIncomeTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into income, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into total income.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total income received by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightIncomeTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into total income.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total income received by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into transfers, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightTransferCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into transfers, grouped by category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightTransferCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into transfers, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightTransferNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into transfers, without category.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightTransferNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into expenses, without tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into transfers, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        Task<List<InsightGroupEntry>> InsightTransferTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into transfers, grouped by tag.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        Task<ApiResponse<List<InsightGroupEntry>>> InsightTransferTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into total transfers.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total amount transfers made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        Task<List<InsightTotalEntry>> InsightTransferTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into total transfers.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a sum of the total amount transfers made by the user. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Insight into transfers, grouped by account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTransferEntry&gt;</returns>
        Task<List<InsightTransferEntry>> InsightTransfersAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insight into transfers, grouped by account.
        /// </summary>
        /// <remarks>
        /// This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTransferEntry&gt;)</returns>
        Task<ApiResponse<List<InsightTransferEntry>>> InsightTransfersWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IInsightApi : IInsightApiSync, IInsightApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class InsightApi : IInsightApi
    {
        private ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="InsightApi"/> class.
        /// </summary>
        /// <returns></returns>
        public InsightApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="InsightApi"/> class.
        /// </summary>
        /// <returns></returns>
        public InsightApi(string basePath) : this(new ConfigurationClient { BasePath = basePath })
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="InsightApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public InsightApi(ConfigurationClient configuration)
        {
            if (configuration == null) throw new ArgumentNullException(nameof(configuration));

            Configuration = ConfigurationClient.MergeConfigurations(
                GlobalConfiguration.Instance,
                configuration
            );
            Client = new ApiClient(Configuration.BasePath);
            AsynchronousClient = new ApiClient(Configuration.BasePath);
            ExceptionFactory = ConfigurationClient.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="InsightApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public InsightApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException(nameof(client));
            if (asyncClient == null) throw new ArgumentNullException(nameof(asyncClient));
            if (configuration == null) throw new ArgumentNullException(nameof(configuration));

            Client = client;
            AsynchronousClient = asyncClient;
            Configuration = configuration;
            ExceptionFactory = ConfigurationClient.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Provides a common RequestOptions object for all operations.
        /// </summary>
		private RequestOptions GetRequestOptions(string[] _contentTypes, string[] _accepts, string operationId, int operationIndex)
		{
            RequestOptions localVarRequestOptions = new RequestOptions();
            var localVarContentType = ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Operation = operationId;
            localVarRequestOptions.OperationIndex = operationIndex;

            return localVarRequestOptions;
		}

        /// <summary>
        /// Sets RequestOptions Authorization headers with bearer or oauth.
        /// </summary>
        private RequestOptions SetAuthorization(RequestOptions localVarRequestOptions)
        {
			// oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(Configuration.OAuthClientSecret) &&
                         Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            return localVarRequestOptions;
		}

        /// <summary>
        /// Validates if operation has an exception and rethrows it.
        /// </summary>
        private void ValidateException(string operationName, IApiResponse localVarResponse)
        {
            if (ExceptionFactory != null)
            {
                Exception _exception = ExceptionFactory(operationName, localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
		}

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseAsset.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseAsset" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by asset account. This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseAssetWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by asset account. This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseAssetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseAsset(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/asset", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseAsset", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by asset account. This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseAssetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseAssetWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by asset account. This endpoint gives a summary of the expenses made by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseAssetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseAsset(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/asset", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseAsset", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseBill.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseBill" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (bills != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "bills[]", bills));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by bill. This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseBillWithHttpInfo(start, end, xTraceId, bills, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by bill. This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseBillWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseBill(start, end, xTraceId, bills, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/bill", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseBill", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by bill. This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseBillAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseBillWithHttpInfoAsync(start, end, xTraceId, bills, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by bill. This endpoint gives a summary of the expenses made by the user, grouped by (any) bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="bills">The bills to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseBillWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? bills = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseBill(start, end, xTraceId, bills, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/bill", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseBill", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseBudget.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseBudget" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (budgets != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "budgets[]", budgets));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by budget. This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseBudgetWithHttpInfo(start, end, xTraceId, budgets, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by budget. This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseBudgetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseBudget(start, end, xTraceId, budgets, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/budget", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseBudget", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by budget. This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseBudgetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseBudgetWithHttpInfoAsync(start, end, xTraceId, budgets, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by budget. This endpoint gives a summary of the expenses made by the user, grouped by (any) budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="budgets">The budgets to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseBudgetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? budgets = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseBudget(start, end, xTraceId, budgets, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/budget", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseBudget", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (categories != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "categories[]", categories));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by category. This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseCategoryWithHttpInfo(start, end, xTraceId, categories, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by category. This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/category", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by category. This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseCategoryWithHttpInfoAsync(start, end, xTraceId, categories, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by category. This endpoint gives a summary of the expenses made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseExpense.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseExpense(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseExpense" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by expense account. This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseExpense(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseExpenseWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by expense account. This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseExpenseWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseExpense(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/expense", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseExpense", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by expense account. This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseExpenseAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseExpenseWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by expense account. This endpoint gives a summary of the expenses made by the user, grouped by expense account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of expense accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. You can combine both asset / liability and expense account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseExpenseWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseExpense(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/expense", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseExpense", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseNoBill.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseNoBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseNoBill" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, without bill. This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightExpenseNoBill(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightExpenseNoBillWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without bill. This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightExpenseNoBillWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoBill(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/expense/no-bill", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseNoBill", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, without bill. This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightExpenseNoBillAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightExpenseNoBillWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without bill. This endpoint gives a summary of the expenses made by the user, including only expenses with no bill. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoBillWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoBill(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/expense/no-bill", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseNoBill", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseNoBudget.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseNoBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseNoBudget" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, without budget. This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightExpenseNoBudget(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightExpenseNoBudgetWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without budget. This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightExpenseNoBudgetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoBudget(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/expense/no-budget", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseNoBudget", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, without budget. This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightExpenseNoBudgetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightExpenseNoBudgetWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without budget. This endpoint gives a summary of the expenses made by the user, including only expenses with no budget. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoBudgetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoBudget(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/expense/no-budget", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseNoBudget", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseNoCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseNoCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, without category. This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightExpenseNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightExpenseNoCategoryWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without category. This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightExpenseNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/expense/no-category", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, without category. This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightExpenseNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightExpenseNoCategoryWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without category. This endpoint gives a summary of the expenses made by the user, including only expenses with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/expense/no-category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseNoTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseNoTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightExpenseNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightExpenseNoTagWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightExpenseNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/expense/no-tag", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightExpenseNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightExpenseNoTagWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the expenses made by the user, including only expenses with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/expense/no-tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (tags != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "tags[]", tags));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, grouped by tag. This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightExpenseTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightExpenseTagWithHttpInfo(start, end, xTraceId, tags, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by tag. This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightExpenseTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/expense/tag", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, grouped by tag. This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightExpenseTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightExpenseTagWithHttpInfoAsync(start, end, xTraceId, tags, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, grouped by tag. This endpoint gives a summary of the expenses made by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightExpenseTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/expense/tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightExpenseTotal.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightExpenseTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightExpenseTotal" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into total expenses. This endpoint gives a sum of the total expenses made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightExpenseTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightExpenseTotalWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total expenses. This endpoint gives a sum of the total expenses made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightExpenseTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/expense/total", localVarRequestOptions, Configuration);
            ValidateException("InsightExpenseTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into total expenses. This endpoint gives a sum of the total expenses made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightExpenseTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightExpenseTotalWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total expenses. This endpoint gives a sum of the total expenses made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only withdrawals from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightExpenseTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightExpenseTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/expense/total", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightExpenseTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeAsset.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeAsset" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, grouped by asset account. This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightIncomeAsset(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightIncomeAssetWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by asset account. This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightIncomeAssetWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeAsset(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/income/asset", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeAsset", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, grouped by asset account. This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightIncomeAssetAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightIncomeAssetWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by asset account. This endpoint gives a summary of the income received by the user, grouped by asset account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeAssetWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeAsset(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/income/asset", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeAsset", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (categories != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "categories[]", categories));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, grouped by category. This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightIncomeCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightIncomeCategoryWithHttpInfo(start, end, xTraceId, categories, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by category. This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightIncomeCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/income/category", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, grouped by category. This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightIncomeCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightIncomeCategoryWithHttpInfoAsync(start, end, xTraceId, categories, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by category. This endpoint gives a summary of the income received by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/income/category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeNoCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeNoCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, without category. This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightIncomeNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightIncomeNoCategoryWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, without category. This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightIncomeNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/income/no-category", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, without category. This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightIncomeNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightIncomeNoCategoryWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, without category. This endpoint gives a summary of the income received by the user, including only income with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/income/no-category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeNoTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeNoTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, without tag. This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightIncomeNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightIncomeNoTagWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, without tag. This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightIncomeNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/income/no-tag", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, without tag. This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightIncomeNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightIncomeNoTagWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, without tag. This endpoint gives a summary of the income received by the user, including only income with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/income/no-tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeRevenue.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeRevenue(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeRevenue" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, grouped by revenue account. This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightIncomeRevenue(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightIncomeRevenueWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by revenue account. This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightIncomeRevenueWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeRevenue(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/income/revenue", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeRevenue", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, grouped by revenue account. This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightIncomeRevenueAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightIncomeRevenueWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by revenue account. This endpoint gives a summary of the income received by the user, grouped by revenue account. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you add the accounts ID&#39;s of revenue accounts, only those accounts are included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. You can combine both asset / liability and deposit account ID&#39;s. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeRevenueWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeRevenue(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/income/revenue", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeRevenue", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (tags != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "tags[]", tags));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into income, grouped by tag. This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightIncomeTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightIncomeTagWithHttpInfo(start, end, xTraceId, tags, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by tag. This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightIncomeTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/income/tag", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into income, grouped by tag. This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightIncomeTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightIncomeTagWithHttpInfoAsync(start, end, xTraceId, tags, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into income, grouped by tag. This endpoint gives a summary of the income received by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightIncomeTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/income/tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightIncomeTotal.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightIncomeTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightIncomeTotal" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into total income. This endpoint gives a sum of the total income received by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightIncomeTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightIncomeTotalWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total income. This endpoint gives a sum of the total income received by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightIncomeTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/income/total", localVarRequestOptions, Configuration);
            ValidateException("InsightIncomeTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into total income. This endpoint gives a sum of the total income received by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightIncomeTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightIncomeTotalWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total income. This endpoint gives a sum of the total income received by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only deposits to those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightIncomeTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightIncomeTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/income/total", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightIncomeTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransferCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransferCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransferCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (categories != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "categories[]", categories));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into transfers, grouped by category. This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightTransferCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightTransferCategoryWithHttpInfo(start, end, xTraceId, categories, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by category. This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightTransferCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/transfer/category", localVarRequestOptions, Configuration);
            ValidateException("InsightTransferCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into transfers, grouped by category. This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightTransferCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightTransferCategoryWithHttpInfoAsync(start, end, xTraceId, categories, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by category. This endpoint gives a summary of the transfers made by the user, grouped by (any) category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="categories">The categories to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightTransferCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? categories = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferCategory(start, end, xTraceId, categories, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/transfer/category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransferCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransferNoCategory.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransferNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransferNoCategory" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into transfers, without category. This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightTransferNoCategory(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightTransferNoCategoryWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, without category. This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightTransferNoCategoryWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/transfer/no-category", localVarRequestOptions, Configuration);
            ValidateException("InsightTransferNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into transfers, without category. This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightTransferNoCategoryAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightTransferNoCategoryWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, without category. This endpoint gives a summary of the transfers made by the user, including only transfers with no category. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferNoCategoryWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferNoCategory(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/transfer/no-category", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransferNoCategory", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransferNoTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransferNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransferNoTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightTransferNoTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightTransferNoTagWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightTransferNoTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/transfer/no-tag", localVarRequestOptions, Configuration);
            ValidateException("InsightTransferNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightTransferNoTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightTransferNoTagWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into expenses, without tag. This endpoint gives a summary of the transfers made by the user, including only transfers with no tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers from those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferNoTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferNoTag(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/transfer/no-tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransferNoTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransferTag.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransferTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransferTag" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (tags != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "tags[]", tags));
            }
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into transfers, grouped by tag. This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightGroupEntry&gt;</returns>
        public List<InsightGroupEntry> InsightTransferTag(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = InsightTransferTagWithHttpInfo(start, end, xTraceId, tags, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by tag. This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightGroupEntry&gt;</returns>
        public ApiResponse<List<InsightGroupEntry>> InsightTransferTagWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightGroupEntry>>("/v1/insight/transfer/tag", localVarRequestOptions, Configuration);
            ValidateException("InsightTransferTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into transfers, grouped by tag. This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightGroupEntry&gt;</returns>
        public async Task<List<InsightGroupEntry>> InsightTransferTagAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightGroupEntry>> localVarResponse = await InsightTransferTagWithHttpInfoAsync(start, end, xTraceId, tags, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by tag. This endpoint gives a summary of the transfers created by the user, grouped by (any) tag. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="tags">The tags to be included in the results.  (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightGroupEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightGroupEntry>>> InsightTransferTagWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? tags = default(List<long>?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferTag(start, end, xTraceId, tags, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightGroupEntry>>("/v1/insight/transfer/tag", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransferTag", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransferTotal.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransferTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransferTotal" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into total transfers. This endpoint gives a sum of the total amount transfers made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTotalEntry&gt;</returns>
        public List<InsightTotalEntry> InsightTransferTotal(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = InsightTransferTotalWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total transfers. This endpoint gives a sum of the total amount transfers made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTotalEntry&gt;</returns>
        public ApiResponse<List<InsightTotalEntry>> InsightTransferTotalWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTotalEntry>>("/v1/insight/transfer/total", localVarRequestOptions, Configuration);
            ValidateException("InsightTransferTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into total transfers. This endpoint gives a sum of the total amount transfers made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTotalEntry&gt;</returns>
        public async Task<List<InsightTotalEntry>> InsightTransferTotalAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTotalEntry>> localVarResponse = await InsightTransferTotalWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into total transfers. This endpoint gives a sum of the total amount transfers made by the user. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTotalEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTotalEntry>>> InsightTransferTotalWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransferTotal(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTotalEntry>>("/v1/insight/transfer/total", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransferTotal", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Provides a specific RequestOptions object for InsightTransfers.
        /// </summary>
		private RequestOptions GetRequestOptionsInsightTransfers(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
		{
            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            RequestOptions localVarRequestOptions = GetRequestOptions(_contentTypes, _accepts,"InsightApi.InsightTransfers" ,operationIndex);

            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "start", start));
            localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("", "end", end));
            if (accounts != null)
            {
                localVarRequestOptions.QueryParameters.Add(ClientUtils.ParameterToMultiMap("multi", "accounts[]", accounts));
            }
            if (xTraceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-Trace-Id", ClientUtils.ParameterToString(xTraceId)); // header parameter
            }

            // authentication (firefly_iii_auth) required
            localVarRequestOptions = SetAuthorization(localVarRequestOptions);
			return localVarRequestOptions;
		}

        /// <summary>
        /// Insight into transfers, grouped by account. This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightTransferEntry&gt;</returns>
        public List<InsightTransferEntry> InsightTransfers(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            ApiResponse<List<InsightTransferEntry>> localVarResponse = InsightTransfersWithHttpInfo(start, end, xTraceId, accounts);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by account. This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightTransferEntry&gt;</returns>
        public ApiResponse<List<InsightTransferEntry>> InsightTransfersWithHttpInfo(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0)
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransfers(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = Client.Get<List<InsightTransferEntry>>("/v1/insight/transfer/asset", localVarRequestOptions, Configuration);
            ValidateException("InsightTransfers", localVarResponse);
            return localVarResponse;
        }

        /// <summary>
        /// Insight into transfers, grouped by account. This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightTransferEntry&gt;</returns>
        public async Task<List<InsightTransferEntry>> InsightTransfersAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            ApiResponse<List<InsightTransferEntry>> localVarResponse = await InsightTransfersWithHttpInfoAsync(start, end, xTraceId, accounts, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Insight into transfers, grouped by account. This endpoint gives a summary of the transfers made by the user, grouped by asset account or lability. 
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="start">A date formatted YYYY-MM-DD. </param>
        /// <param name="end">A date formatted YYYY-MM-DD. </param>
        /// <param name="xTraceId">Unique identifier associated with this request. (optional)</param>
        /// <param name="accounts">The accounts to be included in the results. If you include ID&#39;s of asset accounts or liabilities, only transfers between those asset accounts / liabilities will be included. Other account ID&#39;s will be ignored.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightTransferEntry&gt;)</returns>
        public async Task<ApiResponse<List<InsightTransferEntry>>> InsightTransfersWithHttpInfoAsync(DateTime start, DateTime end, Guid? xTraceId = default(Guid?), List<long>? accounts = default(List<long>?), int operationIndex = 0, CancellationToken cancellationToken = default(CancellationToken))
        {
            RequestOptions localVarRequestOptions = GetRequestOptionsInsightTransfers(start, end, xTraceId, accounts, operationIndex);

            // make the HTTP request
            var localVarResponse = await AsynchronousClient.GetAsync<List<InsightTransferEntry>>("/v1/insight/transfer/asset", localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);
            ValidateException("InsightTransfers", localVarResponse);
            return localVarResponse;
        }
    }
}
