openapi: 3.0.0
info:
  contact:
    email: james@firefly-iii.org
    name: James Cole
    url: https://firefly-iii.org
  description: |
    This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the "Authorize" button to try the API below. This file was last generated on 2023-10-15T12:13:25+00:00

    Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that.
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  title: Firefly III API v2.0.10
  version: 2.0.10
servers:
- description: Firefly III demo site
  url: https://demo.firefly-iii.org/api
security:
- firefly_iii_auth: []
- local_bearer_auth: []
tags:
- description: "Endpoints that deliver all of the user&#039;s asset, expense and other\
    \ accounts (and the metadata) together with related transactions, piggy banks\
    \ and other objects. Also delivers endpoints for CRUD operations for accounts."
  name: accounts
- description: "Endpoints to manage a user&#039;s budgets and get info on the related\
    \ objects, like limits."
  name: budgets
- description: The &quot;charts&quot; endpoints deliver optimised data for charts
    and graphs.
  name: charts
- description: Shows you the net worth of the current user.
  name: net-worth
- description: "These endpoints can be used to manage the user&#039;s preferences,\
    \ including some hidden ones."
  name: preferences
- description: Endpoints to sum transactions based on various properties.
  name: transactions-sum
paths:
  /v2/chart/account/dashboard:
    get:
      description: |
        This endpoint returns the data required to generate a chart with basic asset account balance information. By default it contains the users frontpage accounts OR all the user's asset accounts if this preference is empty.
      operationId: getChartAccountOverview
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartLineV2'
          description: Chart information. Check out the model for more details. Each
            main entry is a set of data.
      summary: Dashboard chart with asset account balance information.
      tags:
      - charts
  /v2/chart/balance/balance:
    get:
      description: |
        The chart contains spent/earned amounts for the given date range, grouped by the given period, and collected for the given accounts.
      operationId: getBalanceChart
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          An array of accounts that should be included. Example: accounts[]=1&accounts[]=2
        explode: true
        in: query
        name: "accounts[]"
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: The period by which the results must be grouped.
        explode: true
        in: query
        name: period
        required: true
        schema:
          $ref: '#/components/schemas/PeriodProperty'
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartLineV2'
          description: Chart information. Check out the model for more details. Each
            main entry is a set of data.
      summary: A chart that contains spent/earned amounts
      tags:
      - charts
  /v2/accounts/{id}/transactions:
    get:
      description: |
        This endpoint returns a list of all the transactions connected to the account.
      operationId: listTransactionByAccount
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page number. The default pagination is per 50 items.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          format: int32
          type: integer
        style: form
      - description: Number of items per page. The default pagination is per 50 items.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          example: 10
          format: int32
          type: integer
        style: form
      - description: The ID of the account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: false
        schema:
          example: 2018-09-17
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: false
        schema:
          example: 2018-09-17
          format: date
          type: string
        style: form
      - description: Optional filter on the transaction type(s) returned.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/TransactionTypeFilter'
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TransactionArray'
          description: A list of transactions
      summary: List all transactions related to the account.
      tags:
      - accounts
  /v2/bills/sum/paid:
    get:
      description: |
        This endpoint sums up (by currency) the transactions linked to bills paid in the given period.
      operationId: getBillsPaidTrSum
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the sum of the bills already paid in the period indicated.
      tags:
      - transactions-sum
  /v2/bills/sum/unpaid:
    get:
      description: |
        This endpoint sums up (by currency) the transactions linked to bills unpaid in the given period.
      operationId: getBillsUnpaidTrSum
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the sum of the bills not yet paid in the period indicated.
      tags:
      - transactions-sum
  /v2/budgets:
    get:
      description: List all the budgets the user has made.
      operationId: listBudgets
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of items per page. The default pagination is per 50 items.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          example: 10
          format: int32
          type: integer
        style: form
      - description: Page number. The default pagination is per 50 items.
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/BudgetV2Array'
          description: A list of budgets.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
      summary: List all budgets.
      tags:
      - budgets
  /v2/budgets/{id}/limits:
    get:
      description: |
        Get all budget limits for this budget.
      operationId: listBudgetLimitByBudget
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The ID of the requested budget.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/BudgetLimitV2Array'
          description: A list of budget limits applicable to this budget.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
      summary: Get all limits for a budget.
      tags:
      - budgets
  /v2/budgets/{id}/budgeted:
    get:
      description: |
        Returns the budgeted amount for the given budget in the given period.
      operationId: getBudgetedForBudget
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The ID of the budget.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the budgeted amount for the given budget in the given period.
      tags:
      - budgets
  /v2/budgets/{id}/spent:
    get:
      description: |
        Returns the spent amount for the given budget in the given period.
      operationId: getSpentForBudget
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The ID of the budget.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the spent amount for the given budget in the given period.
      tags:
      - budgets
  /v2/budgets/sum/budgeted:
    get:
      description: |
        Returns the budgeted amount for all budgets in the given period.
      operationId: getBudgetedForBudgets
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The ID of the budget.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the budgeted amount for all budgets in the given period.
      tags:
      - budgets
  /v2/budgets/sum/spent:
    get:
      description: |
        Returns the spent amount for all budgets in the given period.
      operationId: getSpentForBudgets
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The ID of the budget.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "123"
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of sums.
      summary: Returns the spent amount for all budgets in the given period.
      tags:
      - budgets
  /v2/preferences/{name}:
    get:
      description: Return a single preference and the value.
      operationId: getPreference
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: The name of the preference.
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: currencyPreference
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PreferenceSingle'
          description: A single preference.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
      summary: Return a single preference.
      tags:
      - preferences
  /v2/net-worth:
    get:
      description: |
        Shows a multi-currency overview of the user's net worth.
      operationId: getNetWorth
      parameters:
      - description: Unique identifier associated with this request.
        explode: false
        in: header
        name: X-Trace-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          A date formatted YYYY-MM-DD.
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
          description: Unauthenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Page not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: Internal exception
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error. The body will have the exact details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSumArray'
          description: An array of net worths.
      summary: Shows the net worth
      tags:
      - net-worth
components:
  schemas:
    TransactionSum:
      example:
        symbol: $
        code: EUR
        native_id: "1"
        native_sum: "12.34"
        native_symbol: $
        sum: "12.34"
        native_code: EUR
        native_name: US Dollar
        decimal_places: 2
        native_decimal_places: 2
        converted: false
        name: Euro
        id: "12"
      properties:
        id:
          description: ID of the currency of this sum.
          example: "12"
          format: string
          type: string
        name:
          description: Currency name associated with this sum.
          example: Euro
          format: string
          type: string
        symbol:
          description: Currency symbol associated with this sum.
          example: $
          format: string
          type: string
        code:
          description: Currency code associated with this sum.
          example: EUR
          format: string
          type: string
        decimal_places:
          description: Number of decimal places for the currency associated with this
            sum.
          example: 2
          format: int32
          type: integer
        sum:
          description: Sum as a string. Can also be negative
          example: "12.34"
          format: string
          type: string
        converted:
          description: "Indicates if this sum was converted to the user's native (default)\
            \ currency. When false, the native_* fields will still be present and\
            \ filled."
          example: false
          format: boolean
          type: boolean
        native_sum:
          description: "Sum as a string, expressed in the user's native (default)\
            \ currency. Can also be negative"
          example: "12.34"
          format: string
          type: string
        native_id:
          description: The ID of the user's native (default) currency.
          example: "1"
          format: string
          type: string
        native_name:
          description: The name of the user's native (default) currency
          example: US Dollar
          format: string
          type: string
        native_symbol:
          description: Currency symbol associated with this amount.
          example: $
          format: string
          type: string
        native_code:
          description: The currency code of the user's native (default) currency.
          example: EUR
          format: string
          type: string
        native_decimal_places:
          description: Number of decimal places for this currency.
          example: 2
          format: int32
          type: integer
      type: object
    TransactionSumArray:
      items:
        $ref: '#/components/schemas/TransactionSum'
      type: array
    BudgetLimitV2:
      example:
        period: monthly
        amount: "123.45"
        currency_name: Euro
        updated_at: 2018-09-17T12:46:47+01:00
        currency_symbol: $
        budget_id: "23"
        start: 2018-09-17T12:46:47+01:00
        created_at: 2018-09-17T12:46:47+01:00
        end: 2018-09-17T12:46:47+01:00
        currency_id: "5"
        currency_code: EUR
        currency_decimal_places: 2
      properties:
        created_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        start:
          description: Start date of the budget limit.
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          type: string
        end:
          description: End date of the budget limit.
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          type: string
        currency_id:
          description: Use either currency_id or currency_code. Defaults to the user's
            default currency.
          example: "5"
          format: string
          type: string
        currency_code:
          description: Use either currency_id or currency_code. Defaults to the user's
            default currency.
          example: EUR
          format: string
          type: string
        currency_name:
          example: Euro
          format: string
          readOnly: true
          type: string
        currency_symbol:
          example: $
          format: string
          readOnly: true
          type: string
        currency_decimal_places:
          example: 2
          format: int32
          readOnly: true
          type: integer
        budget_id:
          description: The budget ID of the associated budget.
          example: "23"
          format: string
          readOnly: true
          type: string
        period:
          description: Period of the budget limit. Only used when auto-generated by
            auto-budget.
          example: monthly
          format: string
          nullable: true
          readOnly: true
          type: string
        amount:
          example: "123.45"
          format: amount
          type: string
      required:
      - amount
      - budget_id
      - end
      - start
      type: object
    BudgetLimitV2Array:
      example:
        data:
        - attributes:
            period: monthly
            amount: "123.45"
            currency_name: Euro
            updated_at: 2018-09-17T12:46:47+01:00
            currency_symbol: $
            budget_id: "23"
            start: 2018-09-17T12:46:47+01:00
            created_at: 2018-09-17T12:46:47+01:00
            end: 2018-09-17T12:46:47+01:00
            currency_id: "5"
            currency_code: EUR
            currency_decimal_places: 2
          id: "2"
          type: budget_limits
        - attributes:
            period: monthly
            amount: "123.45"
            currency_name: Euro
            updated_at: 2018-09-17T12:46:47+01:00
            currency_symbol: $
            budget_id: "23"
            start: 2018-09-17T12:46:47+01:00
            created_at: 2018-09-17T12:46:47+01:00
            end: 2018-09-17T12:46:47+01:00
            currency_id: "5"
            currency_code: EUR
            currency_decimal_places: 2
          id: "2"
          type: budget_limits
        meta:
          pagination:
            per_page: 100
            total: 3
            count: 20
            total_pages: 1
            current_page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/BudgetLimitReadV2'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    BudgetLimitReadV2:
      example:
        attributes:
          period: monthly
          amount: "123.45"
          currency_name: Euro
          updated_at: 2018-09-17T12:46:47+01:00
          currency_symbol: $
          budget_id: "23"
          start: 2018-09-17T12:46:47+01:00
          created_at: 2018-09-17T12:46:47+01:00
          end: 2018-09-17T12:46:47+01:00
          currency_id: "5"
          currency_code: EUR
          currency_decimal_places: 2
        id: "2"
        type: budget_limits
      properties:
        type:
          description: Immutable value
          example: budget_limits
          format: string
          type: string
        id:
          example: "2"
          format: string
          type: string
        attributes:
          $ref: '#/components/schemas/BudgetLimitV2'
      required:
      - attributes
      - id
      - type
      type: object
    BudgetV2:
      example:
        updated_at: 2018-09-17T12:46:47+01:00
        name: Bills
        created_at: 2018-09-17T12:46:47+01:00
        active: false
        order: 5
      properties:
        created_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        name:
          example: Bills
          format: string
          type: string
        active:
          example: false
          format: boolean
          type: boolean
        order:
          example: 5
          format: int32
          readOnly: true
          type: integer
      required:
      - name
      type: object
    BudgetV2Array:
      example:
        data:
        - attributes:
            updated_at: 2018-09-17T12:46:47+01:00
            name: Bills
            created_at: 2018-09-17T12:46:47+01:00
            active: false
            order: 5
          id: "2"
          type: budgets
        - attributes:
            updated_at: 2018-09-17T12:46:47+01:00
            name: Bills
            created_at: 2018-09-17T12:46:47+01:00
            active: false
            order: 5
          id: "2"
          type: budgets
        meta:
          pagination:
            per_page: 100
            total: 3
            count: 20
            total_pages: 1
            current_page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/BudgetV2Read'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    BudgetV2Read:
      example:
        attributes:
          updated_at: 2018-09-17T12:46:47+01:00
          name: Bills
          created_at: 2018-09-17T12:46:47+01:00
          active: false
          order: 5
        id: "2"
        type: budgets
      properties:
        type:
          description: Immutable value
          example: budgets
          format: string
          type: string
        id:
          example: "2"
          format: string
          type: string
        attributes:
          $ref: '#/components/schemas/BudgetV2'
      required:
      - attributes
      - id
      - type
      type: object
    ChartDataPointV2:
      example:
        key: value
      properties:
        key:
          description: "The key is the label of the value, so for example: '2018-01-01'\
            \ => 13 or 'Groceries' => -123. For date-related charts, this is always\
            \ a Atom date."
          example: value
          format: string
          type: string
      type: object
    ChartDataSetV2:
      example:
        period: 1M
        native_entries:
        - key: value
        - key: value
        native_id: "5"
        currency_symbol: $
        native_symbol: $
        start: 2018-09-17T12:46:47+01:00
        label: earned-EUR
        native_code: EUR
        currency_code: EUR
        currency_decimal_places: 2
        native_decimal_places: 2
        entries:
        - key: value
        - key: value
        end: 2018-09-17T12:46:47+01:00
        currency_id: "5"
      properties:
        label:
          description: "This is the label of the current data-set. It can refer to\
            \ an object by name, or a collected set of data."
          example: earned-EUR
          format: string
          type: string
        currency_id:
          description: The currency ID of the currency associated to the data in the
            entries.
          example: "5"
          format: string
          type: string
        currency_code:
          example: EUR
          format: string
          type: string
        currency_symbol:
          example: $
          format: string
          type: string
        currency_decimal_places:
          description: Number of decimals for the currency associated to the data
            in the entries.
          example: 2
          format: int32
          type: integer
        native_id:
          description: The currency ID of the user's native (default) currency.
          example: "5"
          format: string
          type: string
        native_code:
          description: The currency code of the user's native (default) currency.
          example: EUR
          format: string
          type: string
        native_symbol:
          description: The currency symbol of the user's native (default) currency.
          example: $
          format: string
          type: string
        native_decimal_places:
          description: Number of decimals for the native (default) currency of the
            user.
          example: 2
          format: int32
          type: integer
        start:
          description: "Holds the date and time of start of the range of data collected.\
            \ It could be there was no data for this point in time, but this is the\
            \ start of the requested range."
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          type: string
        end:
          description: "Holds the date and time of END of the range of data collected.\
            \ It could be there was no data for this point in time, but this is the\
            \ end of the requested range."
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          type: string
        period:
          $ref: '#/components/schemas/ChartV2PeriodProperty'
        entries:
          description: The actual entries for this data set. They 'key' value is the
            label for the data point. The value is the actual (numerical) value.
          items:
            $ref: '#/components/schemas/ChartDataPointV2'
          type: array
        native_entries:
          description: The entries for this data set converted to the user's native
            (default) currency. They 'key' value is the label for the data point.
            The value is the actual (numerical) value.
          items:
            $ref: '#/components/schemas/ChartDataPointV2'
          type: array
      type: object
    ChartLineV2:
      items:
        $ref: '#/components/schemas/ChartDataSetV2'
      type: array
    ChartV2PeriodProperty:
      description: "This field denotes the period in which the chart data is split\
        \ up. If the period is not relevant, because the chart is not time-based,\
        \ it will be NULL."
      enum:
      - 1D
      - 1W
      - 1M
      - 3M
      - 6M
      - 1Y
      example: 1M
      format: string
      nullable: true
      type: string
    Preference:
      example:
        updated_at: 2018-09-17T12:46:47+01:00
        data: null
        name: currencyPreference
        created_at: 2018-09-17T12:46:47+01:00
      properties:
        created_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        name:
          example: currencyPreference
          format: string
          type: string
        data:
          $ref: '#/components/schemas/PolymorphicProperty'
      required:
      - data
      - name
      type: object
    PreferenceRead:
      example:
        attributes:
          updated_at: 2018-09-17T12:46:47+01:00
          data: null
          name: currencyPreference
          created_at: 2018-09-17T12:46:47+01:00
        id: "2"
        type: preferences
      properties:
        type:
          description: Immutable value
          example: preferences
          format: string
          type: string
        id:
          example: "2"
          format: string
          type: string
        attributes:
          $ref: '#/components/schemas/Preference'
      required:
      - attributes
      - id
      - type
      type: object
    PreferenceSingle:
      example:
        data:
          attributes:
            updated_at: 2018-09-17T12:46:47+01:00
            data: null
            name: currencyPreference
            created_at: 2018-09-17T12:46:47+01:00
          id: "2"
          type: preferences
      properties:
        data:
          $ref: '#/components/schemas/PreferenceRead'
      required:
      - data
      type: object
    PeriodProperty:
      enum:
      - 1D
      - 1W
      - 1M
      - 3M
      - 6M
      - 1Y
      type: string
    PolymorphicProperty:
      oneOf:
      - type: boolean
      - type: string
      - type: object
      - items:
          $ref: '#/components/schemas/StringArrayItem'
        type: array
    StringArrayItem:
      format: string
      type: string
    TransactionArray:
      example:
        data:
        - attributes:
            group_title: Split transaction title.
            updated_at: 2018-09-17T12:46:47+01:00
            created_at: 2018-09-17T12:46:47+01:00
            transactions:
            - date: 2018-09-17T12:46:47+01:00
              category_name: Groceries
              notes: Some example notes
              sepa_batch_id: sepa_batch_id
              destination_id: "2"
              zoom_level: 6
              type: withdrawal
              destination_type: Asset account
              external_url: external_url
              transaction_journal_id: "10421"
              payment_date: 2000-01-23T04:56:07.000+00:00
              order: 0
              longitude: 5.916667
              bill_id: "111"
              foreign_currency_code: USD
              reconciled: false
              sepa_country: sepa_country
              source_type: Asset account
              foreign_currency_decimal_places: 2
              bill_name: Monthly rent
              original_source: original_source
              sepa_ct_id: sepa_ct_id
              tags:
              - Barbecue preparation
              - Barbecue preparation
              foreign_amount: "123.45"
              process_date: 2000-01-23T04:56:07.000+00:00
              sepa_ep: sepa_ep
              internal_reference: internal_reference
              sepa_cc: sepa_cc
              destination_iban: NL02ABNA0123456789
              source_iban: NL02ABNA0123456789
              budget_id: "4"
              latitude: 51.983333
              description: Vegetables
              destination_name: Buy and Large
              external_id: external_id
              currency_code: EUR
              import_hash_v2: import_hash_v2
              currency_decimal_places: 2
              invoice_date: 2000-01-23T04:56:07.000+00:00
              category_id: "43"
              foreign_currency_symbol: $
              recurrence_id: 0
              foreign_currency_id: "17"
              source_name: Checking account
              amount: "123.45"
              budget_name: Groceries
              currency_name: Euro
              has_attachments: false
              currency_symbol: $
              interest_date: 2000-01-23T04:56:07.000+00:00
              sepa_db: sepa_db
              due_date: 2000-01-23T04:56:07.000+00:00
              recurrence_total: 0
              book_date: 2000-01-23T04:56:07.000+00:00
              recurrence_count: 12
              bunq_payment_id: bunq_payment_id
              sepa_ct_op: sepa_ct_op
              source_id: "2"
              user: "3"
              currency_id: "12"
              sepa_ci: sepa_ci
            - date: 2018-09-17T12:46:47+01:00
              category_name: Groceries
              notes: Some example notes
              sepa_batch_id: sepa_batch_id
              destination_id: "2"
              zoom_level: 6
              type: withdrawal
              destination_type: Asset account
              external_url: external_url
              transaction_journal_id: "10421"
              payment_date: 2000-01-23T04:56:07.000+00:00
              order: 0
              longitude: 5.916667
              bill_id: "111"
              foreign_currency_code: USD
              reconciled: false
              sepa_country: sepa_country
              source_type: Asset account
              foreign_currency_decimal_places: 2
              bill_name: Monthly rent
              original_source: original_source
              sepa_ct_id: sepa_ct_id
              tags:
              - Barbecue preparation
              - Barbecue preparation
              foreign_amount: "123.45"
              process_date: 2000-01-23T04:56:07.000+00:00
              sepa_ep: sepa_ep
              internal_reference: internal_reference
              sepa_cc: sepa_cc
              destination_iban: NL02ABNA0123456789
              source_iban: NL02ABNA0123456789
              budget_id: "4"
              latitude: 51.983333
              description: Vegetables
              destination_name: Buy and Large
              external_id: external_id
              currency_code: EUR
              import_hash_v2: import_hash_v2
              currency_decimal_places: 2
              invoice_date: 2000-01-23T04:56:07.000+00:00
              category_id: "43"
              foreign_currency_symbol: $
              recurrence_id: 0
              foreign_currency_id: "17"
              source_name: Checking account
              amount: "123.45"
              budget_name: Groceries
              currency_name: Euro
              has_attachments: false
              currency_symbol: $
              interest_date: 2000-01-23T04:56:07.000+00:00
              sepa_db: sepa_db
              due_date: 2000-01-23T04:56:07.000+00:00
              recurrence_total: 0
              book_date: 2000-01-23T04:56:07.000+00:00
              recurrence_count: 12
              bunq_payment_id: bunq_payment_id
              sepa_ct_op: sepa_ct_op
              source_id: "2"
              user: "3"
              currency_id: "12"
              sepa_ci: sepa_ci
            user: "3"
          links:
            "0":
              rel: self
              uri: /OBJECTS/1
            self: https://demo.firefly-iii.org/api/v1/OBJECTS/1
          id: "2"
          type: transactions
        - attributes:
            group_title: Split transaction title.
            updated_at: 2018-09-17T12:46:47+01:00
            created_at: 2018-09-17T12:46:47+01:00
            transactions:
            - date: 2018-09-17T12:46:47+01:00
              category_name: Groceries
              notes: Some example notes
              sepa_batch_id: sepa_batch_id
              destination_id: "2"
              zoom_level: 6
              type: withdrawal
              destination_type: Asset account
              external_url: external_url
              transaction_journal_id: "10421"
              payment_date: 2000-01-23T04:56:07.000+00:00
              order: 0
              longitude: 5.916667
              bill_id: "111"
              foreign_currency_code: USD
              reconciled: false
              sepa_country: sepa_country
              source_type: Asset account
              foreign_currency_decimal_places: 2
              bill_name: Monthly rent
              original_source: original_source
              sepa_ct_id: sepa_ct_id
              tags:
              - Barbecue preparation
              - Barbecue preparation
              foreign_amount: "123.45"
              process_date: 2000-01-23T04:56:07.000+00:00
              sepa_ep: sepa_ep
              internal_reference: internal_reference
              sepa_cc: sepa_cc
              destination_iban: NL02ABNA0123456789
              source_iban: NL02ABNA0123456789
              budget_id: "4"
              latitude: 51.983333
              description: Vegetables
              destination_name: Buy and Large
              external_id: external_id
              currency_code: EUR
              import_hash_v2: import_hash_v2
              currency_decimal_places: 2
              invoice_date: 2000-01-23T04:56:07.000+00:00
              category_id: "43"
              foreign_currency_symbol: $
              recurrence_id: 0
              foreign_currency_id: "17"
              source_name: Checking account
              amount: "123.45"
              budget_name: Groceries
              currency_name: Euro
              has_attachments: false
              currency_symbol: $
              interest_date: 2000-01-23T04:56:07.000+00:00
              sepa_db: sepa_db
              due_date: 2000-01-23T04:56:07.000+00:00
              recurrence_total: 0
              book_date: 2000-01-23T04:56:07.000+00:00
              recurrence_count: 12
              bunq_payment_id: bunq_payment_id
              sepa_ct_op: sepa_ct_op
              source_id: "2"
              user: "3"
              currency_id: "12"
              sepa_ci: sepa_ci
            - date: 2018-09-17T12:46:47+01:00
              category_name: Groceries
              notes: Some example notes
              sepa_batch_id: sepa_batch_id
              destination_id: "2"
              zoom_level: 6
              type: withdrawal
              destination_type: Asset account
              external_url: external_url
              transaction_journal_id: "10421"
              payment_date: 2000-01-23T04:56:07.000+00:00
              order: 0
              longitude: 5.916667
              bill_id: "111"
              foreign_currency_code: USD
              reconciled: false
              sepa_country: sepa_country
              source_type: Asset account
              foreign_currency_decimal_places: 2
              bill_name: Monthly rent
              original_source: original_source
              sepa_ct_id: sepa_ct_id
              tags:
              - Barbecue preparation
              - Barbecue preparation
              foreign_amount: "123.45"
              process_date: 2000-01-23T04:56:07.000+00:00
              sepa_ep: sepa_ep
              internal_reference: internal_reference
              sepa_cc: sepa_cc
              destination_iban: NL02ABNA0123456789
              source_iban: NL02ABNA0123456789
              budget_id: "4"
              latitude: 51.983333
              description: Vegetables
              destination_name: Buy and Large
              external_id: external_id
              currency_code: EUR
              import_hash_v2: import_hash_v2
              currency_decimal_places: 2
              invoice_date: 2000-01-23T04:56:07.000+00:00
              category_id: "43"
              foreign_currency_symbol: $
              recurrence_id: 0
              foreign_currency_id: "17"
              source_name: Checking account
              amount: "123.45"
              budget_name: Groceries
              currency_name: Euro
              has_attachments: false
              currency_symbol: $
              interest_date: 2000-01-23T04:56:07.000+00:00
              sepa_db: sepa_db
              due_date: 2000-01-23T04:56:07.000+00:00
              recurrence_total: 0
              book_date: 2000-01-23T04:56:07.000+00:00
              recurrence_count: 12
              bunq_payment_id: bunq_payment_id
              sepa_ct_op: sepa_ct_op
              source_id: "2"
              user: "3"
              currency_id: "12"
              sepa_ci: sepa_ci
            user: "3"
          links:
            "0":
              rel: self
              uri: /OBJECTS/1
            self: https://demo.firefly-iii.org/api/v1/OBJECTS/1
          id: "2"
          type: transactions
        meta:
          pagination:
            per_page: 100
            total: 3
            count: 20
            total_pages: 1
            current_page: 1
        links:
          next: https://demo.firefly-iii.org/api/v1/OBJECT?&page=3
          last: https://demo.firefly-iii.org/api/v1/OBJECT?&page=12
          prev: https://demo.firefly-iii.org/api/v1/OBJECT?&page=2
          self: https://demo.firefly-iii.org/api/v1/OBJECT?&page=4
          first: https://demo.firefly-iii.org/api/v1/OBJECT?&page=1
      properties:
        data:
          items:
            $ref: '#/components/schemas/TransactionRead'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/PageLink'
      required:
      - data
      - links
      - meta
      type: object
    TransactionRead:
      example:
        attributes:
          group_title: Split transaction title.
          updated_at: 2018-09-17T12:46:47+01:00
          created_at: 2018-09-17T12:46:47+01:00
          transactions:
          - date: 2018-09-17T12:46:47+01:00
            category_name: Groceries
            notes: Some example notes
            sepa_batch_id: sepa_batch_id
            destination_id: "2"
            zoom_level: 6
            type: withdrawal
            destination_type: Asset account
            external_url: external_url
            transaction_journal_id: "10421"
            payment_date: 2000-01-23T04:56:07.000+00:00
            order: 0
            longitude: 5.916667
            bill_id: "111"
            foreign_currency_code: USD
            reconciled: false
            sepa_country: sepa_country
            source_type: Asset account
            foreign_currency_decimal_places: 2
            bill_name: Monthly rent
            original_source: original_source
            sepa_ct_id: sepa_ct_id
            tags:
            - Barbecue preparation
            - Barbecue preparation
            foreign_amount: "123.45"
            process_date: 2000-01-23T04:56:07.000+00:00
            sepa_ep: sepa_ep
            internal_reference: internal_reference
            sepa_cc: sepa_cc
            destination_iban: NL02ABNA0123456789
            source_iban: NL02ABNA0123456789
            budget_id: "4"
            latitude: 51.983333
            description: Vegetables
            destination_name: Buy and Large
            external_id: external_id
            currency_code: EUR
            import_hash_v2: import_hash_v2
            currency_decimal_places: 2
            invoice_date: 2000-01-23T04:56:07.000+00:00
            category_id: "43"
            foreign_currency_symbol: $
            recurrence_id: 0
            foreign_currency_id: "17"
            source_name: Checking account
            amount: "123.45"
            budget_name: Groceries
            currency_name: Euro
            has_attachments: false
            currency_symbol: $
            interest_date: 2000-01-23T04:56:07.000+00:00
            sepa_db: sepa_db
            due_date: 2000-01-23T04:56:07.000+00:00
            recurrence_total: 0
            book_date: 2000-01-23T04:56:07.000+00:00
            recurrence_count: 12
            bunq_payment_id: bunq_payment_id
            sepa_ct_op: sepa_ct_op
            source_id: "2"
            user: "3"
            currency_id: "12"
            sepa_ci: sepa_ci
          - date: 2018-09-17T12:46:47+01:00
            category_name: Groceries
            notes: Some example notes
            sepa_batch_id: sepa_batch_id
            destination_id: "2"
            zoom_level: 6
            type: withdrawal
            destination_type: Asset account
            external_url: external_url
            transaction_journal_id: "10421"
            payment_date: 2000-01-23T04:56:07.000+00:00
            order: 0
            longitude: 5.916667
            bill_id: "111"
            foreign_currency_code: USD
            reconciled: false
            sepa_country: sepa_country
            source_type: Asset account
            foreign_currency_decimal_places: 2
            bill_name: Monthly rent
            original_source: original_source
            sepa_ct_id: sepa_ct_id
            tags:
            - Barbecue preparation
            - Barbecue preparation
            foreign_amount: "123.45"
            process_date: 2000-01-23T04:56:07.000+00:00
            sepa_ep: sepa_ep
            internal_reference: internal_reference
            sepa_cc: sepa_cc
            destination_iban: NL02ABNA0123456789
            source_iban: NL02ABNA0123456789
            budget_id: "4"
            latitude: 51.983333
            description: Vegetables
            destination_name: Buy and Large
            external_id: external_id
            currency_code: EUR
            import_hash_v2: import_hash_v2
            currency_decimal_places: 2
            invoice_date: 2000-01-23T04:56:07.000+00:00
            category_id: "43"
            foreign_currency_symbol: $
            recurrence_id: 0
            foreign_currency_id: "17"
            source_name: Checking account
            amount: "123.45"
            budget_name: Groceries
            currency_name: Euro
            has_attachments: false
            currency_symbol: $
            interest_date: 2000-01-23T04:56:07.000+00:00
            sepa_db: sepa_db
            due_date: 2000-01-23T04:56:07.000+00:00
            recurrence_total: 0
            book_date: 2000-01-23T04:56:07.000+00:00
            recurrence_count: 12
            bunq_payment_id: bunq_payment_id
            sepa_ct_op: sepa_ct_op
            source_id: "2"
            user: "3"
            currency_id: "12"
            sepa_ci: sepa_ci
          user: "3"
        links:
          "0":
            rel: self
            uri: /OBJECTS/1
          self: https://demo.firefly-iii.org/api/v1/OBJECTS/1
        id: "2"
        type: transactions
      properties:
        type:
          description: Immutable value
          example: transactions
          format: string
          type: string
        id:
          example: "2"
          format: string
          type: string
        attributes:
          $ref: '#/components/schemas/Transaction'
        links:
          $ref: '#/components/schemas/ObjectLink'
      required:
      - attributes
      - id
      - links
      - type
      type: object
    Meta:
      example:
        pagination:
          per_page: 100
          total: 3
          count: 20
          total_pages: 1
          current_page: 1
      properties:
        pagination:
          $ref: '#/components/schemas/Meta_pagination'
      type: object
    ObjectLink:
      example:
        "0":
          rel: self
          uri: /OBJECTS/1
        self: https://demo.firefly-iii.org/api/v1/OBJECTS/1
      properties:
        "0":
          $ref: '#/components/schemas/ObjectLink_0'
        self:
          example: https://demo.firefly-iii.org/api/v1/OBJECTS/1
          format: uri
          type: string
      type: object
    PageLink:
      example:
        next: https://demo.firefly-iii.org/api/v1/OBJECT?&page=3
        last: https://demo.firefly-iii.org/api/v1/OBJECT?&page=12
        prev: https://demo.firefly-iii.org/api/v1/OBJECT?&page=2
        self: https://demo.firefly-iii.org/api/v1/OBJECT?&page=4
        first: https://demo.firefly-iii.org/api/v1/OBJECT?&page=1
      properties:
        self:
          example: https://demo.firefly-iii.org/api/v1/OBJECT?&page=4
          format: uri
          type: string
        first:
          example: https://demo.firefly-iii.org/api/v1/OBJECT?&page=1
          format: uri
          type: string
        next:
          example: https://demo.firefly-iii.org/api/v1/OBJECT?&page=3
          format: uri
          type: string
        prev:
          example: https://demo.firefly-iii.org/api/v1/OBJECT?&page=2
          format: uri
          type: string
        last:
          example: https://demo.firefly-iii.org/api/v1/OBJECT?&page=12
          format: uri
          type: string
      type: object
    Transaction:
      example:
        group_title: Split transaction title.
        updated_at: 2018-09-17T12:46:47+01:00
        created_at: 2018-09-17T12:46:47+01:00
        transactions:
        - date: 2018-09-17T12:46:47+01:00
          category_name: Groceries
          notes: Some example notes
          sepa_batch_id: sepa_batch_id
          destination_id: "2"
          zoom_level: 6
          type: withdrawal
          destination_type: Asset account
          external_url: external_url
          transaction_journal_id: "10421"
          payment_date: 2000-01-23T04:56:07.000+00:00
          order: 0
          longitude: 5.916667
          bill_id: "111"
          foreign_currency_code: USD
          reconciled: false
          sepa_country: sepa_country
          source_type: Asset account
          foreign_currency_decimal_places: 2
          bill_name: Monthly rent
          original_source: original_source
          sepa_ct_id: sepa_ct_id
          tags:
          - Barbecue preparation
          - Barbecue preparation
          foreign_amount: "123.45"
          process_date: 2000-01-23T04:56:07.000+00:00
          sepa_ep: sepa_ep
          internal_reference: internal_reference
          sepa_cc: sepa_cc
          destination_iban: NL02ABNA0123456789
          source_iban: NL02ABNA0123456789
          budget_id: "4"
          latitude: 51.983333
          description: Vegetables
          destination_name: Buy and Large
          external_id: external_id
          currency_code: EUR
          import_hash_v2: import_hash_v2
          currency_decimal_places: 2
          invoice_date: 2000-01-23T04:56:07.000+00:00
          category_id: "43"
          foreign_currency_symbol: $
          recurrence_id: 0
          foreign_currency_id: "17"
          source_name: Checking account
          amount: "123.45"
          budget_name: Groceries
          currency_name: Euro
          has_attachments: false
          currency_symbol: $
          interest_date: 2000-01-23T04:56:07.000+00:00
          sepa_db: sepa_db
          due_date: 2000-01-23T04:56:07.000+00:00
          recurrence_total: 0
          book_date: 2000-01-23T04:56:07.000+00:00
          recurrence_count: 12
          bunq_payment_id: bunq_payment_id
          sepa_ct_op: sepa_ct_op
          source_id: "2"
          user: "3"
          currency_id: "12"
          sepa_ci: sepa_ci
        - date: 2018-09-17T12:46:47+01:00
          category_name: Groceries
          notes: Some example notes
          sepa_batch_id: sepa_batch_id
          destination_id: "2"
          zoom_level: 6
          type: withdrawal
          destination_type: Asset account
          external_url: external_url
          transaction_journal_id: "10421"
          payment_date: 2000-01-23T04:56:07.000+00:00
          order: 0
          longitude: 5.916667
          bill_id: "111"
          foreign_currency_code: USD
          reconciled: false
          sepa_country: sepa_country
          source_type: Asset account
          foreign_currency_decimal_places: 2
          bill_name: Monthly rent
          original_source: original_source
          sepa_ct_id: sepa_ct_id
          tags:
          - Barbecue preparation
          - Barbecue preparation
          foreign_amount: "123.45"
          process_date: 2000-01-23T04:56:07.000+00:00
          sepa_ep: sepa_ep
          internal_reference: internal_reference
          sepa_cc: sepa_cc
          destination_iban: NL02ABNA0123456789
          source_iban: NL02ABNA0123456789
          budget_id: "4"
          latitude: 51.983333
          description: Vegetables
          destination_name: Buy and Large
          external_id: external_id
          currency_code: EUR
          import_hash_v2: import_hash_v2
          currency_decimal_places: 2
          invoice_date: 2000-01-23T04:56:07.000+00:00
          category_id: "43"
          foreign_currency_symbol: $
          recurrence_id: 0
          foreign_currency_id: "17"
          source_name: Checking account
          amount: "123.45"
          budget_name: Groceries
          currency_name: Euro
          has_attachments: false
          currency_symbol: $
          interest_date: 2000-01-23T04:56:07.000+00:00
          sepa_db: sepa_db
          due_date: 2000-01-23T04:56:07.000+00:00
          recurrence_total: 0
          book_date: 2000-01-23T04:56:07.000+00:00
          recurrence_count: 12
          bunq_payment_id: bunq_payment_id
          sepa_ct_op: sepa_ct_op
          source_id: "2"
          user: "3"
          currency_id: "12"
          sepa_ci: sepa_ci
        user: "3"
      properties:
        created_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          readOnly: true
          type: string
        user:
          description: User ID
          example: "3"
          format: string
          readOnly: true
          type: string
        group_title:
          description: Title of the transaction if it has been split in more than
            one piece. Empty otherwise.
          example: Split transaction title.
          format: string
          nullable: true
          readOnly: false
          type: string
        transactions:
          items:
            $ref: '#/components/schemas/TransactionSplit'
          type: array
      required:
      - transactions
      type: object
    TransactionSplit:
      example:
        date: 2018-09-17T12:46:47+01:00
        category_name: Groceries
        notes: Some example notes
        sepa_batch_id: sepa_batch_id
        destination_id: "2"
        zoom_level: 6
        type: withdrawal
        destination_type: Asset account
        external_url: external_url
        transaction_journal_id: "10421"
        payment_date: 2000-01-23T04:56:07.000+00:00
        order: 0
        longitude: 5.916667
        bill_id: "111"
        foreign_currency_code: USD
        reconciled: false
        sepa_country: sepa_country
        source_type: Asset account
        foreign_currency_decimal_places: 2
        bill_name: Monthly rent
        original_source: original_source
        sepa_ct_id: sepa_ct_id
        tags:
        - Barbecue preparation
        - Barbecue preparation
        foreign_amount: "123.45"
        process_date: 2000-01-23T04:56:07.000+00:00
        sepa_ep: sepa_ep
        internal_reference: internal_reference
        sepa_cc: sepa_cc
        destination_iban: NL02ABNA0123456789
        source_iban: NL02ABNA0123456789
        budget_id: "4"
        latitude: 51.983333
        description: Vegetables
        destination_name: Buy and Large
        external_id: external_id
        currency_code: EUR
        import_hash_v2: import_hash_v2
        currency_decimal_places: 2
        invoice_date: 2000-01-23T04:56:07.000+00:00
        category_id: "43"
        foreign_currency_symbol: $
        recurrence_id: 0
        foreign_currency_id: "17"
        source_name: Checking account
        amount: "123.45"
        budget_name: Groceries
        currency_name: Euro
        has_attachments: false
        currency_symbol: $
        interest_date: 2000-01-23T04:56:07.000+00:00
        sepa_db: sepa_db
        due_date: 2000-01-23T04:56:07.000+00:00
        recurrence_total: 0
        book_date: 2000-01-23T04:56:07.000+00:00
        recurrence_count: 12
        bunq_payment_id: bunq_payment_id
        sepa_ct_op: sepa_ct_op
        source_id: "2"
        user: "3"
        currency_id: "12"
        sepa_ci: sepa_ci
      properties:
        user:
          description: User ID
          example: "3"
          format: string
          readOnly: true
          type: string
        transaction_journal_id:
          description: |
            ID of the underlying transaction journal. Each transaction consists of a transaction group (see the top ID) and one or more journals
            making up the splits of the transaction.
          example: "10421"
          format: string
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/TransactionTypeProperty'
        date:
          description: Date of the transaction
          example: 2018-09-17T12:46:47+01:00
          format: date-time
          type: string
        order:
          description: Order of this entry in the list of transactions.
          example: 0
          format: int32
          nullable: true
          type: integer
        currency_id:
          description: "Currency ID. Default is the source account's currency, or\
            \ the user's default currency. Can be used instead of currency_code."
          example: "12"
          format: string
          nullable: true
          type: string
        currency_code:
          description: "Currency code. Default is the source account's currency, or\
            \ the user's default currency. Can be used instead of currency_id."
          example: EUR
          format: string
          nullable: true
          type: string
        currency_symbol:
          example: $
          format: string
          readOnly: true
          type: string
        currency_name:
          example: Euro
          format: string
          readOnly: true
          type: string
        currency_decimal_places:
          description: Number of decimals used in this currency.
          example: 2
          format: int32
          readOnly: true
          type: integer
        foreign_currency_id:
          description: Currency ID of the foreign currency. Default is null. Is required
            when you submit a foreign amount.
          example: "17"
          format: string
          nullable: true
          type: string
        foreign_currency_code:
          description: "Currency code of the foreign currency. Default is NULL. Can\
            \ be used instead of the foreign_currency_id, but this or the ID is required\
            \ when submitting a foreign amount."
          example: USD
          format: string
          nullable: true
          type: string
        foreign_currency_symbol:
          example: $
          format: string
          nullable: true
          readOnly: true
          type: string
        foreign_currency_decimal_places:
          description: Number of decimals in the currency
          example: 2
          format: int32
          nullable: true
          readOnly: true
          type: integer
        amount:
          description: Amount of the transaction.
          example: "123.45"
          format: amount
          type: string
        foreign_amount:
          description: The amount in a foreign currency.
          example: "123.45"
          format: amount
          nullable: true
          type: string
        description:
          description: Description of the transaction.
          example: Vegetables
          format: string
          type: string
        source_id:
          description: "ID of the source account. For a withdrawal or a transfer,\
            \ this must always be an asset account. For deposits, this must be a revenue\
            \ account."
          example: "2"
          format: string
          nullable: true
          type: string
        source_name:
          description: "Name of the source account. For a withdrawal or a transfer,\
            \ this must always be an asset account. For deposits, this must be a revenue\
            \ account. Can be used instead of the source_id. If the transaction is\
            \ a deposit, the source_name can be filled in freely: the account will\
            \ be created based on the name."
          example: Checking account
          format: string
          nullable: true
          type: string
        source_iban:
          example: NL02ABNA0123456789
          format: string
          nullable: true
          readOnly: true
          type: string
        source_type:
          $ref: '#/components/schemas/AccountTypeProperty'
        destination_id:
          description: "ID of the destination account. For a deposit or a transfer,\
            \ this must always be an asset account. For withdrawals this must be an\
            \ expense account."
          example: "2"
          format: string
          nullable: true
          type: string
        destination_name:
          description: "Name of the destination account. You can submit the name instead\
            \ of the ID. For everything except transfers, the account will be auto-generated\
            \ if unknown, so submitting a name is enough."
          example: Buy and Large
          format: string
          nullable: true
          type: string
        destination_iban:
          example: NL02ABNA0123456789
          format: string
          nullable: true
          readOnly: true
          type: string
        destination_type:
          $ref: '#/components/schemas/AccountTypeProperty'
        budget_id:
          description: The budget ID for this transaction.
          example: "4"
          format: string
          nullable: true
          type: string
        budget_name:
          description: "The name of the budget to be used. If the budget name is unknown,\
            \ the ID will be used or the value will be ignored."
          example: Groceries
          format: string
          nullable: true
          readOnly: true
          type: string
        category_id:
          description: The category ID for this transaction.
          example: "43"
          format: string
          nullable: true
          type: string
        category_name:
          description: "The name of the category to be used. If the category is unknown,\
            \ it will be created. If the ID and the name point to different categories,\
            \ the ID overrules the name."
          example: Groceries
          format: string
          nullable: true
          type: string
        bill_id:
          description: Optional. Use either this or the bill_name
          example: "111"
          format: string
          nullable: true
          type: string
        bill_name:
          description: Optional. Use either this or the bill_id
          example: Monthly rent
          format: string
          nullable: true
          type: string
        reconciled:
          description: "If the transaction has been reconciled already. When you set\
            \ this, the amount can no longer be edited by the user."
          example: false
          format: boolean
          type: boolean
        notes:
          example: Some example notes
          format: string
          nullable: true
          type: string
        tags:
          description: Array of tags.
          items:
            description: Tag.
            example: Barbecue preparation
            format: string
            type: string
          nullable: true
          type: array
          example: null
        internal_reference:
          description: Reference to internal reference of other systems.
          format: string
          nullable: true
          type: string
        external_id:
          description: Reference to external ID in other systems.
          format: string
          nullable: true
          type: string
        external_url:
          description: "External, custom URL for this transaction."
          format: string
          nullable: true
          type: string
        original_source:
          description: System generated identifier for original creator of transaction.
          format: string
          nullable: true
          readOnly: true
          type: string
        recurrence_id:
          description: Reference to recurrence that made the transaction.
          format: int32
          nullable: true
          readOnly: true
          type: integer
        recurrence_total:
          description: Total number of transactions expected to be created by this
            recurrence repetition. Will be 0 if infinite.
          example: 0
          format: int32
          nullable: true
          readOnly: true
          type: integer
        recurrence_count:
          description: "The # of the current transaction created under this recurrence."
          example: 12
          format: int32
          nullable: true
          readOnly: true
          type: integer
        bunq_payment_id:
          description: Internal ID of bunq transaction. DEPRECATED
          format: string
          nullable: true
          type: string
        import_hash_v2:
          description: Hash value of original import transaction (for duplicate detection).
          format: string
          nullable: true
          readOnly: true
          type: string
        sepa_cc:
          description: SEPA Clearing Code
          format: string
          nullable: true
          type: string
        sepa_ct_op:
          description: SEPA Opposing Account Identifier
          format: string
          nullable: true
          type: string
        sepa_ct_id:
          description: SEPA end-to-end Identifier
          format: string
          nullable: true
          type: string
        sepa_db:
          description: SEPA mandate identifier
          format: string
          nullable: true
          type: string
        sepa_country:
          description: SEPA Country
          format: string
          nullable: true
          type: string
        sepa_ep:
          description: SEPA External Purpose indicator
          format: string
          nullable: true
          type: string
        sepa_ci:
          description: SEPA Creditor Identifier
          format: string
          nullable: true
          type: string
        sepa_batch_id:
          description: SEPA Batch ID
          format: string
          nullable: true
          type: string
        interest_date:
          format: date-time
          nullable: true
          type: string
        book_date:
          format: date-time
          nullable: true
          type: string
        process_date:
          format: date-time
          nullable: true
          type: string
        due_date:
          format: date-time
          nullable: true
          type: string
        payment_date:
          format: date-time
          nullable: true
          type: string
        invoice_date:
          format: date-time
          nullable: true
          type: string
        latitude:
          description: "Latitude of the transaction's location, if applicable. Can\
            \ be used to draw a map."
          example: 51.983333
          format: double
          nullable: true
          type: number
        longitude:
          description: "Latitude of the transaction's location, if applicable. Can\
            \ be used to draw a map."
          example: 5.916667
          format: double
          nullable: true
          type: number
        zoom_level:
          description: "Zoom level for the map, if drawn. This to set the box right.\
            \ Unfortunately this is a proprietary value because each map provider\
            \ has different zoom levels."
          example: 6
          format: int32
          nullable: true
          type: integer
        has_attachments:
          description: If the transaction has attachments.
          example: false
          format: boolean
          type: boolean
      required:
      - amount
      - date
      - description
      - destination_id
      - source_id
      - type
      type: object
    BadRequest:
      properties:
        message:
          example: Bad Request
          format: string
          type: string
        exception:
          example: BadRequestHttpException
          format: string
          type: string
      type: object
    CreditCardType:
      description: Mandatory when the account_role is ccAsset. Can only be monthlyFull
        or null.
      enum:
      - monthlyFull
      - null
      example: monthlyFull
      format: string
      nullable: true
      type: string
    InterestPeriod:
      description: Mandatory when type is liability. Period over which the interest
        is calculated.
      enum:
      - weekly
      - monthly
      - quarterly
      - half-year
      - yearly
      - null
      example: monthly
      format: string
      nullable: true
      type: string
    InternalException:
      properties:
        message:
          example: Internal Exception
          format: string
          type: string
        exception:
          example: InternalException
          format: string
          type: string
      type: object
    LiabilityDirection:
      description: '''credit'' indicates somebody owes you the liability. ''debit''
        Indicates you owe this debt yourself. Works only for liabiltiies.'
      enum:
      - credit
      - debit
      - null
      example: credit
      format: string
      nullable: true
      type: string
    LiabilityType:
      description: Mandatory when type is liability. Specifies the exact type.
      enum:
      - loan
      - debt
      - mortgage
      - null
      example: loan
      format: string
      nullable: true
      type: string
    NotFound:
      properties:
        message:
          example: Resource not found
          format: string
          type: string
        exception:
          example: NotFoundHttpException
          format: string
          type: string
      type: object
    Unauthenticated:
      properties:
        message:
          example: Unauthenticated
          format: string
          type: string
        exception:
          example: AuthenticationException
          format: string
          type: string
      type: object
    ValidationError:
      properties:
        message:
          example: The given data was invalid.
          format: string
          type: string
        errors:
          $ref: '#/components/schemas/ValidationError_errors'
      type: object
    AccountRoleProperty:
      description: Is only mandatory when the type is asset.
      enum:
      - defaultAsset
      - sharedAsset
      - savingAsset
      - ccAsset
      - cashWalletAsset
      - null
      example: defaultAsset
      format: string
      nullable: true
      type: string
    AccountTypeProperty:
      enum:
      - Default account
      - Cash account
      - Asset account
      - Expense account
      - Revenue account
      - Initial balance account
      - Beneficiary account
      - Import account
      - Reconciliation account
      - Loan
      - Debt
      - Mortgage
      example: Asset account
      format: string
      readOnly: true
      type: string
    ShortAccountTypeProperty:
      description: "Can only be one one these account types. import, initial-balance\
        \ and reconciliation cannot be set manually."
      enum:
      - asset
      - expense
      - import
      - revenue
      - cash
      - liability
      - liabilities
      - initial-balance
      - reconciliation
      example: asset
      format: string
      type: string
    TransactionTypeProperty:
      enum:
      - withdrawal
      - deposit
      - transfer
      - reconciliation
      - opening balance
      example: withdrawal
      format: string
      type: string
    AccountTypeFilter:
      enum:
      - all
      - asset
      - cash
      - expense
      - revenue
      - special
      - hidden
      - liability
      - liabilities
      - Default account
      - Cash account
      - Asset account
      - Expense account
      - Revenue account
      - Initial balance account
      - Beneficiary account
      - Import account
      - Reconciliation account
      - Loan
      - Debt
      - Mortgage
      type: string
    TransactionTypeFilter:
      enum:
      - all
      - withdrawal
      - withdrawals
      - expense
      - deposit
      - deposits
      - income
      - transfer
      - transfers
      - opening_balance
      - reconciliation
      - special
      - specials
      - default
      type: string
    Meta_pagination:
      example:
        per_page: 100
        total: 3
        count: 20
        total_pages: 1
        current_page: 1
      properties:
        total:
          example: 3
          type: integer
        count:
          example: 20
          type: integer
        per_page:
          example: 100
          type: integer
        current_page:
          example: 1
          type: integer
        total_pages:
          example: 1
          type: integer
      type: object
    ObjectLink_0:
      example:
        rel: self
        uri: /OBJECTS/1
      properties:
        rel:
          example: self
          format: string
          type: string
        uri:
          example: /OBJECTS/1
          format: string
          type: string
      type: object
    ValidationError_errors:
      properties:
        email:
          items:
            format: string
            type: string
          type: array
        blocked:
          items:
            format: string
            type: string
          type: array
        role:
          items:
            format: string
            type: string
          type: array
        blocked_code:
          items:
            format: string
            type: string
          type: array
        name:
          items:
            format: string
            type: string
          type: array
        type:
          items:
            format: string
            type: string
          type: array
        iban:
          items:
            format: string
            type: string
          type: array
        start:
          items:
            format: string
            type: string
          type: array
        end:
          items:
            format: string
            type: string
          type: array
        date:
          items:
            format: string
            type: string
          type: array
      type: object
  securitySchemes:
    firefly_iii_auth:
      description: Default OAuth2 flow
      flows:
        authorizationCode:
          authorizationUrl: https://demo.firefly-iii.org/oauth/authorize
          refreshUrl: https://demo.firefly-iii.org/oauth/token
          scopes: {}
          tokenUrl: https://demo.firefly-iii.org/oauth/token
      type: oauth2
    local_bearer_auth:
      description: Optional Bearer token flow
      scheme: bearer
      type: http

